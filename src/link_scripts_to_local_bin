#!/usr/bin/env bash
set +e

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # iterate until no longer a symlink
  DIR="$(cd -P "$(dirname "$SOURCE")" > /dev/null 2>&1 && pwd)"
  SOURCE="$(readlink "$SOURCE")"

  # check if relative symlink
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$(cd -P "$(dirname "$SOURCE")" > /dev/null 2>&1 && pwd)"

echo ""
echo "---- linking sh scripts ----"

sh_scripts=(
  "wp_cli"
  "mknano"
  "mktouch"
  "wslgoogle"
  "move_and_link"
  "cd_to_project"
  "check_min_tls_version"
  "git_add_file_as_executable"
  "git_rename_and_commit"
  "git_compare_branches"
  "gen_ts_barrel"
  "gen_ts_function"
  "gen_ts_functions"
  "gen_ts_function_spec"
  "gen_ts_function_specs"
  "gen_ts_class"
  "gen_ts_class_spec"
  "whats_my_public_ip"
  "aws_get_ami_of_latest_ecs_optimized_linux"
  "aws_list_file_extensions_in_s3_bucket"
  "foreach_folder_do"
  "on_dir_change_run"
  "link_scripts_to_local_bin"
  "list_all_file_extensions_in_current_dir"
  "docker_run_postgres"
  "npm_audit_fix_and_push"
  "yarn_upgrade_and_push"
  "npm_update_package_and_commit"
  "npm_update_package_and_commit_multiple"
  "renovate_diff_package_versions"
)

for script in "${sh_scripts[@]}"; do
  chmod +x "$DIR/$script"
  echo "linking $script"
  ln -sf "$DIR/$script" "/usr/local/bin/$script"
done

echo ""
echo "---- linking js scripts ----"

js_scripts=(
  "npm_remove_package_from_lock"
  "yarn_remove_package_from_lock"
  "composer_what_requires_package"
  "nrun"
)

for script in "${js_scripts[@]}"; do
  chmod +x "$DIR/$script.js"
  echo "linking $script.js"
  ln -sf "$DIR/$script.js" "/usr/local/bin/$script"
done
