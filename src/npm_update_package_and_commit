#!/usr/bin/env bash

commit_prefix="Update"
options=$(getopt -o C:: --long conventional:: -- "$@") || exit
eval set -- "$options"

while true; do
  case "$1" in
  -C | --conventional)
    commit_prefix="${2:-chore}: update"
    shift 2
    ;;
  --)
    shift
    break
    ;;
  *)
    echo "Internal error!"
    exit 1
    ;;
  esac
done

get_package_version_constraint() {
  package="${1:?first argument must be package name}"

  jq -re '.dependencies + .devDependencies | ."'"$package"'"' package.json
}

package="${1:?first arg must be package name}"
target="$2"
lock_file="package-lock.json"

if [ ! -f "package.json" ]; then echo "no package.json in directory" && exit; fi

cur_version=$(get_package_version_constraint "$package")
echo "updating $package@$cur_version"

if [ ! -f "package-lock.json" ]; then
  if [ ! -f "yarn.lock" ]; then echo "lock file not found" && exit; fi

  yarn add "$package@$target"
  lock_file="yarn.lock"
else
  npm i --package-lock-only "$package@$target"
fi

new_version=$(get_package_version_constraint "$package")
echo "updated $package@$new_version"

git commit \
  package.json "$lock_file" \
  -m "$commit_prefix \`$package\` to \`$new_version\` (from \`$cur_version\`)"
