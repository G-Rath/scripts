#!/usr/bin/env bash

# exits after echoing $1
die_with_message() { echo "$1" && exit; }

# exits if $1 is empty, echoing $2 as it does so
die_with_message_if_empty() {
  if [ -z "$1" ]; then
    die_with_message "$2"
  fi
}

get_package_version_constraint() {
  die_with_message_if_empty "$1" "first arg must be package name"
  package="$1"

  jq -re '.dependencies + .devDependencies | ."'"$package"'"' package.json
}

package="$1"
target="$2"
lock_file="package-lock.json"

die_with_message_if_empty "$package" "first arg must be package name"

if [ ! -f "package.json" ]; then echo "no package.json in directory" && exit; fi

cur_version=$(get_package_version_constraint "$package")
echo "updating $package@$cur_version"

if [ ! -f "package-lock.json" ]; then
  if [ ! -f "yarn.lock" ]; then echo "lock file not found" && exit; fi

  yarn upgrade "$package@$target"
  lock_file="yarn.lock"
else
  npm i --package-lock-only "$package@$target"
fi

new_version=$(get_package_version_constraint "$package")
echo "updated $package@$new_version"

git commit \
  package.json "$lock_file" \
  -m "Update \`$package\` to \`$new_version\` (from \`$cur_version\`)"
